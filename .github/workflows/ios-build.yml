name: iOS Build

on:
  push:
    branches: [ ios-native-app ]
  pull_request:
    branches: [ ios-native-app ]
  workflow_dispatch:

jobs:
  build:
    name: Build iOS App
    runs-on: macos-14  # Latest macOS with Xcode 15+
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Create Xcode project structure
      run: |
        mkdir -p iPhoneTestSuite.xcodeproj
        cd iPhoneTestSuite.xcodeproj
        
        # Create project.pbxproj file
        cat > project.pbxproj << 'EOF'
        // !$*UTF8*$!
        {
        	archiveVersion = 1;
        	classes = {
        	};
        	objectVersion = 56;
        	objects = {
        
        /* Begin PBXBuildFile section */
        		A1000001 /* iPhoneTestSuiteApp.swift in Sources */ = {isa = PBXBuildFile; fileRef = A2000001 /* iPhoneTestSuiteApp.swift */; };
        		A1000002 /* ContentView.swift in Sources */ = {isa = PBXBuildFile; fileRef = A2000002 /* ContentView.swift */; };
        		A1000003 /* Models.swift in Sources */ = {isa = PBXBuildFile; fileRef = A2000003 /* Models.swift */; };
        		A1000004 /* ProximityTestView.swift in Sources */ = {isa = PBXBuildFile; fileRef = A2000004 /* ProximityTestView.swift */; };
        		A1000005 /* SpeakerTestView.swift in Sources */ = {isa = PBXBuildFile; fileRef = A2000005 /* SpeakerTestView.swift */; };
        		A1000006 /* GyroscopeTestView.swift in Sources */ = {isa = PBXBuildFile; fileRef = A2000006 /* GyroscopeTestView.swift */; };
        		A1000007 /* PlaceholderViews.swift in Sources */ = {isa = PBXBuildFile; fileRef = A2000007 /* PlaceholderViews.swift */; };
        /* End PBXBuildFile section */
        
        /* Begin PBXFileReference section */
        		A3000001 /* iPhoneTestSuite.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = iPhoneTestSuite.app; sourceTree = BUILT_PRODUCTS_DIR; };
        		A2000001 /* iPhoneTestSuiteApp.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = iPhoneTestSuiteApp.swift; sourceTree = "<group>"; };
        		A2000002 /* ContentView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContentView.swift; sourceTree = "<group>"; };
        		A2000003 /* Models.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Models.swift; sourceTree = "<group>"; };
        		A2000004 /* ProximityTestView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ProximityTestView.swift; sourceTree = "<group>"; };
        		A2000005 /* SpeakerTestView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SpeakerTestView.swift; sourceTree = "<group>"; };
        		A2000006 /* GyroscopeTestView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GyroscopeTestView.swift; sourceTree = "<group>"; };
        		A2000007 /* PlaceholderViews.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PlaceholderViews.swift; sourceTree = "<group>"; };
        		A2000008 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
        /* End PBXFileReference section */
        
        /* Begin PBXFrameworksBuildPhase section */
        		A4000001 /* Frameworks */ = {
        			isa = PBXFrameworksBuildPhase;
        			buildActionMask = 2147483647;
        			files = (
        			);
        			runOnlyForDeploymentPostprocessing = 0;
        		};
        /* End PBXFrameworksBuildPhase section */
        
        /* Begin PBXGroup section */
        		A5000001 = {
        			isa = PBXGroup;
        			children = (
        				A5000002 /* iPhoneTestSuite-iOS */,
        				A5000003 /* Products */,
        			);
        			sourceTree = "<group>";
        		};
        		A5000002 /* iPhoneTestSuite-iOS */ = {
        			isa = PBXGroup;
        			children = (
        				A2000001 /* iPhoneTestSuiteApp.swift */,
        				A2000002 /* ContentView.swift */,
        				A2000003 /* Models.swift */,
        				A2000004 /* ProximityTestView.swift */,
        				A2000005 /* SpeakerTestView.swift */,
        				A2000006 /* GyroscopeTestView.swift */,
        				A2000007 /* PlaceholderViews.swift */,
        				A2000008 /* Info.plist */,
        			);
        			path = "iPhoneTestSuite-iOS";
        			sourceTree = "<group>";
        		};
        		A5000003 /* Products */ = {
        			isa = PBXGroup;
        			children = (
        				A3000001 /* iPhoneTestSuite.app */,
        			);
        			name = Products;
        			sourceTree = "<group>";
        		};
        /* End PBXGroup section */
        
        /* Begin PBXNativeTarget section */
        		A6000001 /* iPhoneTestSuite */ = {
        			isa = PBXNativeTarget;
        			buildConfigurationList = A7000001 /* Build configuration list for PBXNativeTarget "iPhoneTestSuite" */;
        			buildPhases = (
        				A8000001 /* Sources */,
        				A4000001 /* Frameworks */,
        				A9000001 /* Resources */,
        			);
        			buildRules = (
        			);
        			dependencies = (
        			);
        			name = iPhoneTestSuite;
        			productName = iPhoneTestSuite;
        			productReference = A3000001 /* iPhoneTestSuite.app */;
        			productType = "com.apple.product-type.application";
        		};
        /* End PBXNativeTarget section */
        
        /* Begin PBXProject section */
        		A0000001 /* Project object */ = {
        			isa = PBXProject;
        			attributes = {
        				BuildIndependentTargetsInParallel = 1;
        				LastSwiftUpdateCheck = 1520;
        				LastUpgradeCheck = 1520;
        				TargetAttributes = {
        					A6000001 = {
        						CreatedOnToolsVersion = 15.2;
        					};
        				};
        			};
        			buildConfigurationList = A7000002 /* Build configuration list for PBXProject "iPhoneTestSuite" */;
        			compatibilityVersion = "Xcode 14.0";
        			developmentRegion = en;
        			hasScannedForEncodings = 0;
        			knownRegions = (
        				en,
        				Base,
        			);
        			mainGroup = A5000001;
        			productRefGroup = A5000003 /* Products */;
        			projectDirPath = "";
        			projectRoot = "";
        			targets = (
        				A6000001 /* iPhoneTestSuite */,
        			);
        		};
        /* End PBXProject section */
        
        /* Begin PBXResourcesBuildPhase section */
        		A9000001 /* Resources */ = {
        			isa = PBXResourcesBuildPhase;
        			buildActionMask = 2147483647;
        			files = (
        			);
        			runOnlyForDeploymentPostprocessing = 0;
        		};
        /* End PBXResourcesBuildPhase section */
        
        /* Begin PBXSourcesBuildPhase section */
        		A8000001 /* Sources */ = {
        			isa = PBXSourcesBuildPhase;
        			buildActionMask = 2147483647;
        			files = (
        				A1000001 /* iPhoneTestSuiteApp.swift in Sources */,
        				A1000002 /* ContentView.swift in Sources */,
        				A1000003 /* Models.swift in Sources */,
        				A1000004 /* ProximityTestView.swift in Sources */,
        				A1000005 /* SpeakerTestView.swift in Sources */,
        				A1000006 /* GyroscopeTestView.swift in Sources */,
        				A1000007 /* PlaceholderViews.swift in Sources */,
        			);
        			runOnlyForDeploymentPostprocessing = 0;
        		};
        /* End PBXSourcesBuildPhase section */
        
        /* Begin XCBuildConfiguration section */
        		B1000001 /* Debug */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ALWAYS_SEARCH_USER_PATHS = NO;
        				CLANG_ANALYZER_NONNULL = YES;
        				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
        				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
        				CLANG_ENABLE_MODULES = YES;
        				CLANG_ENABLE_OBJC_ARC = YES;
        				CLANG_ENABLE_OBJC_WEAK = YES;
        				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
        				CLANG_WARN_BOOL_CONVERSION = YES;
        				CLANG_WARN_COMMA = YES;
        				CLANG_WARN_CONSTANT_CONVERSION = YES;
        				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
        				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
        				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
        				CLANG_WARN_EMPTY_BODY = YES;
        				CLANG_WARN_ENUM_CONVERSION = YES;
        				CLANG_WARN_INFINITE_RECURSION = YES;
        				CLANG_WARN_INT_CONVERSION = YES;
        				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
        				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
        				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
        				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
        				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
        				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
        				CLANG_WARN_STRICT_PROTOTYPES = YES;
        				CLANG_WARN_SUSPICIOUS_MOVE = YES;
        				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
        				CLANG_WARN_UNREACHABLE_CODE = YES;
        				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
        				COPY_PHASE_STRIP = NO;
        				DEBUG_INFORMATION_FORMAT = dwarf;
        				ENABLE_STRICT_OBJC_MSGSEND = YES;
        				ENABLE_TESTABILITY = YES;
        				GCC_C_LANGUAGE_STANDARD = gnu11;
        				GCC_DYNAMIC_NO_PIC = NO;
        				GCC_NO_COMMON_BLOCKS = YES;
        				GCC_OPTIMIZATION_LEVEL = 0;
        				GCC_PREPROCESSOR_DEFINITIONS = (
        					"DEBUG=1",
        					"$(inherited)",
        				);
        				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
        				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
        				GCC_WARN_UNDECLARED_SELECTOR = YES;
        				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
        				GCC_WARN_UNUSED_FUNCTION = YES;
        				GCC_WARN_UNUSED_VARIABLE = YES;
        				IPHONEOS_DEPLOYMENT_TARGET = 16.0;
        				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
        				MTL_FAST_MATH = YES;
        				ONLY_ACTIVE_ARCH = YES;
        				SDKROOT = iphoneos;
        				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
        				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
        			};
        			name = Debug;
        		};
        		B1000002 /* Release */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ALWAYS_SEARCH_USER_PATHS = NO;
        				CLANG_ANALYZER_NONNULL = YES;
        				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
        				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
        				CLANG_ENABLE_MODULES = YES;
        				CLANG_ENABLE_OBJC_ARC = YES;
        				CLANG_ENABLE_OBJC_WEAK = YES;
        				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
        				CLANG_WARN_BOOL_CONVERSION = YES;
        				CLANG_WARN_COMMA = YES;
        				CLANG_WARN_CONSTANT_CONVERSION = YES;
        				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
        				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
        				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
        				CLANG_WARN_EMPTY_BODY = YES;
        				CLANG_WARN_ENUM_CONVERSION = YES;
        				CLANG_WARN_INFINITE_RECURSION = YES;
        				CLANG_WARN_INT_CONVERSION = YES;
        				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
        				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
        				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
        				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
        				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
        				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
        				CLANG_WARN_STRICT_PROTOTYPES = YES;
        				CLANG_WARN_SUSPICIOUS_MOVE = YES;
        				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
        				CLANG_WARN_UNREACHABLE_CODE = YES;
        				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
        				COPY_PHASE_STRIP = NO;
        				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
        				ENABLE_NS_ASSERTIONS = NO;
        				ENABLE_STRICT_OBJC_MSGSEND = YES;
        				GCC_C_LANGUAGE_STANDARD = gnu11;
        				GCC_NO_COMMON_BLOCKS = YES;
        				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
        				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
        				GCC_WARN_UNDECLARED_SELECTOR = YES;
        				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
        				GCC_WARN_UNUSED_FUNCTION = YES;
        				GCC_WARN_UNUSED_VARIABLE = YES;
        				IPHONEOS_DEPLOYMENT_TARGET = 16.0;
        				MTL_ENABLE_DEBUG_INFO = NO;
        				MTL_FAST_MATH = YES;
        				SDKROOT = iphoneos;
        				SWIFT_COMPILATION_MODE = wholemodule;
        				SWIFT_OPTIMIZATION_LEVEL = "-O";
        				VALIDATE_PRODUCT = YES;
        			};
        			name = Release;
        		};
        		B2000001 /* Debug */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
        				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
        				CODE_SIGN_IDENTITY = "-";
        				CODE_SIGN_STYLE = Automatic;
        				CURRENT_PROJECT_VERSION = 1;
        				DEVELOPMENT_ASSET_PATHS = "";
        				DEVELOPMENT_TEAM = "";
        				ENABLE_PREVIEWS = YES;
        				GENERATE_INFOPLIST_FILE = NO;
        				INFOPLIST_FILE = "iPhoneTestSuite-iOS/Info.plist";
        				INFOPLIST_KEY_UIApplicationSceneManifest_Generation = YES;
        				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
        				INFOPLIST_KEY_UILaunchScreen_Generation = YES;
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				LD_RUNPATH_SEARCH_PATHS = (
        					"$(inherited)",
        					"@executable_path/Frameworks",
        				);
        				MARKETING_VERSION = 1.0;
        				PRODUCT_BUNDLE_IDENTIFIER = com.github.iphoneteststuite;
        				PRODUCT_NAME = "$(TARGET_NAME)";
        				SWIFT_EMIT_LOC_STRINGS = YES;
        				SWIFT_VERSION = 5.0;
        				TARGETED_DEVICE_FAMILY = "1,2";
        			};
        			name = Debug;
        		};
        		B2000002 /* Release */ = {
        			isa = XCBuildConfiguration;
        			buildSettings = {
        				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
        				ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor;
        				CODE_SIGN_IDENTITY = "-";
        				CODE_SIGN_STYLE = Automatic;
        				CURRENT_PROJECT_VERSION = 1;
        				DEVELOPMENT_ASSET_PATHS = "";
        				DEVELOPMENT_TEAM = "";
        				ENABLE_PREVIEWS = YES;
        				GENERATE_INFOPLIST_FILE = NO;
        				INFOPLIST_FILE = "iPhoneTestSuite-iOS/Info.plist";
        				INFOPLIST_KEY_UIApplicationSceneManifest_Generation = YES;
        				INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES;
        				INFOPLIST_KEY_UILaunchScreen_Generation = YES;
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = "UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = "UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight";
        				LD_RUNPATH_SEARCH_PATHS = (
        					"$(inherited)",
        					"@executable_path/Frameworks",
        				);
        				MARKETING_VERSION = 1.0;
        				PRODUCT_BUNDLE_IDENTIFIER = com.github.iphoneteststuite;
        				PRODUCT_NAME = "$(TARGET_NAME)";
        				SWIFT_EMIT_LOC_STRINGS = YES;
        				SWIFT_VERSION = 5.0;
        				TARGETED_DEVICE_FAMILY = "1,2";
        			};
        			name = Release;
        		};
        /* End XCBuildConfiguration section */
        
        /* Begin XCConfigurationList section */
        		A7000001 /* Build configuration list for PBXNativeTarget "iPhoneTestSuite" */ = {
        			isa = XCConfigurationList;
        			buildConfigurations = (
        				B2000001 /* Debug */,
        				B2000002 /* Release */,
        			);
        			defaultConfigurationIsVisible = 0;
        			defaultConfigurationName = Release;
        		};
        		A7000002 /* Build configuration list for PBXProject "iPhoneTestSuite" */ = {
        			isa = XCConfigurationList;
        			buildConfigurations = (
        				B1000001 /* Debug */,
        				B1000002 /* Release */,
        			);
        			defaultConfigurationIsVisible = 0;
        			defaultConfigurationName = Release;
        		};
        /* End XCConfigurationList section */
        	};
        	rootObject = A0000001 /* Project object */;
        }
        EOF
      
		- name: Build for iOS (device, unsigned)
			run: |
				set -o pipefail
				xcodebuild clean build \
          -project iPhoneTestSuite.xcodeproj \
          -scheme iPhoneTestSuite \
					-sdk iphoneos \
					-configuration Release \
					-arch arm64 \
          -derivedDataPath ./DerivedData \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          2>&1 | tee build.log
      continue-on-error: true
      
		- name: Show compilation errors (summary)
			if: failure()
			run: |
				echo "### ❌ Build failed" >> $GITHUB_STEP_SUMMARY
				echo "" >> $GITHUB_STEP_SUMMARY
				echo "Last 200 lines of build.log:" >> $GITHUB_STEP_SUMMARY
				echo '```' >> $GITHUB_STEP_SUMMARY
				tail -n 200 build.log >> $GITHUB_STEP_SUMMARY || echo "build.log missing" >> $GITHUB_STEP_SUMMARY
				echo '```' >> $GITHUB_STEP_SUMMARY
          
    - name: Find build artifacts
      run: |
        echo "Build output location:"
        find ./DerivedData -name "*.app" -type d || echo "No .app bundles found"
        ls -la ./DerivedData/Build/Products/ || echo "Products directory not found"
    
    - name: Create IPA for sideloading
      if: success()
      run: |
        # Find the .app bundle
        APP_PATH=$(find ./DerivedData/Build/Products -name "*.app" -type d | head -n 1)
        
        if [ -n "$APP_PATH" ]; then
          echo "Found app at: $APP_PATH"
          
          # Create Payload directory structure
          mkdir -p Payload
          cp -r "$APP_PATH" Payload/
          
          # Create IPA (it's just a zip file)
          zip -r iPhoneTestSuite.ipa Payload
          
          echo "✅ IPA created: iPhoneTestSuite.ipa"
          ls -lh iPhoneTestSuite.ipa
        else
          echo "❌ No .app bundle found"
          exit 1
        fi
          
		- name: Upload build artifacts (success)
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: iPhoneTestSuite-IPA
        path: |
          iPhoneTestSuite.ipa
          build.log
        retention-days: 7
        if-no-files-found: warn

		- name: Upload build log (on failure)
			uses: actions/upload-artifact@v4
			if: failure()
			with:
				name: build-log
				path: build.log
				retention-days: 7
				if-no-files-found: warn

    - name: Build summary
      if: always()
      run: |
        echo "### iOS Build Complete! 🎉" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f "iPhoneTestSuite.ipa" ]; then
          IPA_SIZE=$(ls -lh iPhoneTestSuite.ipa | awk '{print $5}')
					echo "✅ **IPA Created Successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📦 **File:** \`iPhoneTestSuite.ipa\` (${IPA_SIZE})" >> $GITHUB_STEP_SUMMARY
					echo "📱 **Target:** iOS Device (unsigned)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 How to Install on iPhone:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Free Methods (7-day signing):**" >> $GITHUB_STEP_SUMMARY
          echo "1. **AltStore** (Recommended) - Auto-refresh every 7 days" >> $GITHUB_STEP_SUMMARY
          echo "   - Download: https://altstore.io" >> $GITHUB_STEP_SUMMARY
          echo "   - Install AltServer on computer, then sideload the IPA" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "2. **Sideloadly** - Manual refresh" >> $GITHUB_STEP_SUMMARY
          echo "   - Download: https://sideloadly.io" >> $GITHUB_STEP_SUMMARY
          echo "   - Drag IPA, enter Apple ID, install" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "3. **Xcode** - Best for development" >> $GITHUB_STEP_SUMMARY
          echo "   - Open project, connect iPhone, build & run" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📖 **Full instructions:** See \`INSTALL.md\` in the repository" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Build failed" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Note:** This IPA is unsigned. For physical devices:" >> $GITHUB_STEP_SUMMARY
        echo "- Use free Apple ID with AltStore/Sideloadly (7 days)" >> $GITHUB_STEP_SUMMARY
        echo "- Or Apple Developer account for 1-year signing ($99/year)" >> $GITHUB_STEP_SUMMARY
